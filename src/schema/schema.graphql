enum Role {
  ADMIN
  USER
}
type Query {
  hello: String
  getCvs: [CV]!
  getCvById(cvId: String): CV!
  getCvSkills(cvid: ID!): [Skill!]!
  getCvUsers(cvid: ID!): User!
}

type Mutation {
  addCv(cvAddInput: CvAddInput): CV!
  updateCv(id: String!, cvUpdateInput: CvUpdateInput): CV!
  deleteCv(id: String!): CV!
}

type CV {
  id: String!
  name: String!
  age: Int!
  job: String!
  skills: [Skill!]
  user: User
}

type Skill {
  id: String!
  designation: String!
  cvs: [CV!]
}

type User {
  id: String!
  name: String!
  email: String!
  role: Role!
  cvs: [CV!]
}

input CvAddInput {
  name: String!
  age: Int!
  job: String!
  userId: String!
  skillIds: [String!]!
}

input CvUpdateInput {
  name: String
  age: Int
  job: String
  owner: String
  skillIds: [String!]
}

type Subscription {
    cvUpdated: CvSubscriptionPayload!
}
type CvSubscriptionPayload {
    Mutation: MutationOperationType!
    cv: CV!
}
enum MutationOperationType{
  UPDATE
  DELETE
  ADD
}
