enum Role {
  ADMIN
  USER
}
type Query {
  hello: String
  getCvs: [CV]!
  getCvById(cvId: String): CV!
  getCvSkills(cvid: ID!): [Skill!]!
  getCvUsers(cvid: ID!): User!
}

type Mutation {
  addCv(cvAddInput: CvAddInput): Cv!
  updateCv(id: Int!, cvUpdateInput: CvUpdateInput): Cv!
  deleteCv(id: Int!): Cv!
}

type CV {
  id: String!
  name: String!
  age: Int!
  job: String!
  skills: [Skill!]!
  user: User!
}

type Skill {
  id: String!
  designation: String!
  cvs: [CV!]!
}

type User {
  id: String!
  name: String!
  email: String!
  role: Role!
  cvs: [CV!]!
}

input CvInput {
    name: String!
    age: Int!
    job: String!
    userId: String!
    skillIds: [Int!]!
}

input CvUpdateInput {
    id: String!
    name: String
    age: Int
    job: String
    userId: String
    skillIds: [Int!]
}
type Subscription {
    cvUpdated: CvSubscriptionPayload!
}
type CvSubscriptionPayload {
    Mutation: MutationOperationType!
    cv: CV!
}
enum MutationOperationType{
  UPDATE
  DELETE
  ADD
}